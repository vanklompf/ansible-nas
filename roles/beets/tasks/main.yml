---
- name: Start Beets
  block:
    - name: Create Beets Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ beets_data_directory }}/config"

    - name: Template Beets config
      ansible.builtin.template:
        src: config.yaml.j2
        dest: "{{ beets_data_directory }}/config/config.yaml"
      register: beets_config

    - name: Beets Docker Container
      community.docker.docker_container:
        name: "{{ beets_container_name }}"
        image: linuxserver/beets
        pull: true
        volumes:
          - "{{ beets_data_directory }}/config:/config:rw"
          - "{{ beets_music_directory }}:/music:ro"
          - "{{ beets_downloads_directory }}:/downloads:rw"
        ports:
          - "{{ beets_port }}:8337"
        restart_policy: unless-stopped
        memory: "{{ beets_memory }}"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ beets_user_id }}"
          PGID: "{{ beets_group_id }}"
        labels:
          traefik.enable: "{{ beets_available_externally | string }}"
          traefik.http.routers.beets.rule: "Host(`{{ beets_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.beets.tls.certresolver: "letsencrypt"
          traefik.http.routers.beets.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.beets.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.beets.loadbalancer.server.port: "8337"
        restart: "{{ beets_config is changed }}"
  when: beets_enabled is true

- name: Stop Beets
  block:
    - name: Stop Beets
      community.docker.docker_container:
        name: "{{ beets_container_name }}"
        state: absent
  when: beets_enabled is false
