---
- name: Start Dockge
  block:
    - name: Create Dockge Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ dockge_data_directory }}"

    - name: Create Dockge Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ dockge_container_name }}"
        image: "{{ dockge_image_name }}:{{ dockge_image_version }}"
        pull: true
        volumes:
          - "{{ dockge_data_directory }}/data:/app/data"
          - /var/run/docker.sock:/var/run/docker.sock
          # If you want to use private registries, you need to share the auth file with Dockge:
          # - /root/.docker/:/root/.docker

          # Your stacks directory in the host (The paths inside container must be the same as the host)
          # ⚠️⚠️ If you did it wrong, your data could end up be written into a wrong path.
          # ✔️✔️✔️✔️ CORRECT: - /my-stacks:/my-stacks (Both paths match)
          # ❌❌❌❌ WRONG: - /docker:/my-stacks (Both paths do not match)
          - "{{ dockge_data_directory }}/stacks:{{ dockge_data_directory }}/stacks"
        ports:
          - "{{ dockge_port }}:5001"
        env:
          DOCKGE_STACKS_DIR: "{{ dockge_stacks_dir }}"
        restart_policy: unless-stopped
        memory: "{{ dockge_memory }}"
        labels:
          traefik.enable: "{{ dockge_available_externally | string }}"
          traefik.http.routers.dockge.rule: "Host(`{{ dockge_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.dockge.tls.certresolver: "letsencrypt"
          traefik.http.routers.dockge.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.dockge.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.dockge.loadbalancer.server.port: "5001"
  when: dockge_enabled is true

- name: Stop Dockge
  block:
    - name: Stop Dockge
      community.docker.docker_container:
        name: "{{ dockge_container_name }}"
        state: absent
  when: dockge_enabled is false
