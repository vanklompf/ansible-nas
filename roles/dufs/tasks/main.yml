---
- name: Start dufs
  block:
    - name: Create dufs Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ dufs_data_directory }}"

    - name: Create dufs Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ dufs_container_name }}"
        image: "{{ dufs_image_name }}:{{ dufs_image_version }}"
        pull: true
        volumes:
          - "{{ dufs_data_directory }}:/srv:rw"
        ports:
          - "{{ dufs_port }}:5000"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ dufs_user_id | quote }}"
          PGID: "{{ dufs_group_id | quote }}"
        restart_policy: unless-stopped
        memory: "{{ dufs_memory }}"
        labels:
          traefik.enable: "{{ dufs_available_externally | string }}"
          traefik.http.routers.dufs.rule: "Host(`{{ dufs_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.dufs.tls.certresolver: "letsencrypt"
          traefik.http.routers.dufs.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.dufs.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.dufs.loadbalancer.server.port: "5000"
        command: "{{ dufs_options }} /srv"
  when: dufs_enabled is true

- name: Stop dufs
  block:
    - name: Stop dufs
      community.docker.docker_container:
        name: "{{ dufs_container_name }}"
        state: absent
  when: dufs_enabled is false
