---
- name: Start Duplicacy
  block:
    - name: Create Duplicacy Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ duplicacy_config_directory }}"
        - "{{ duplicacy_logs_directory }}"
        - "{{ duplicacy_cache_directory }}"

#    - name: Register user provided keys
#      local_action: stat path="{{ inventory_dir }}/mosquitto"
#      register: mosquitto_user_config

#    - name: Copy keys
#      ansible.builtin.copy:
#        src: "{{ inventory_dir }}/duplicacy/public.pem"
#        dest: "{{ duplicacy_config_directory }}"
#      when: mosquitto_user_config.stat.exists

    - name: Duplicacy Docker Container
      community.docker.docker_container:
        name: "{{ duplicacy_container_name }}"
        image: saspus/duplicacy-web:mini
        hostname: "{{ duplicacy_hostname }}"
        pull: true
        ports:
          - "{{ duplicacy_port }}:3875"
        volumes:
          - "{{ duplicacy_config_directory }}:/config:rw"
          - "{{ duplicacy_logs_directory }}:/logs:rw"
          - "{{ duplicacy_cache_directory }}:/cache:rw"
          - "{{ samba_shares_root }}:/mediaroot:{{ duplicacy_data_permissions }}"
          - "{{ docker_home }}:/dockerroot:{{ duplicacy_data_permissions }}"
          - "{{ backup_root }}:/backup:rw"

        env:
          DUPLICACY_WEB_VERSION: "{{ duplicacy_web_version }}"
          TZ: "{{ ansible_nas_timezone }}"
          USR_ID: "{{ duplicacy_user_id }}"
          GRP_ID: "{{ duplicacy_group_id }}"
        restart_policy: unless-stopped
        memory: "{{ duplicacy_memory }}"
        labels:
          traefik.enable: "{{ duplicacy_available_externally | string }}"
          traefik.http.routers.duplicacy.rule: "Host(`{{ duplicacy_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.duplicacy.tls.certresolver: "letsencrypt"
          traefik.http.routers.duplicacy.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.duplicacy.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.duplicacy.loadbalancer.server.port: "3875"
        network_mode: host
  when: duplicacy_enabled is true

- name: Stop Duplicacy
  block:
    - name: Stop Duplicacy
      community.docker.docker_container:
        name: "{{ duplicacy_container_name }}"
        state: absent
  when: duplicacy_enabled is false

- name: Setup Duplicacy storage backend
  block:
    - name: Create Duplicacy storage group
      ansible.builtin.group:
        name: "{{ duplicacy_storage_group }}"
        state: present
      delegate_to: "{{ duplicacy_storage_host }}"

    - name: Create Duplicacy storage user
      ansible.builtin.user:
        name: "{{ duplicacy_storage_user }}"
        state: present
        system: yes
        update_password: on_create
        create_home: yes
        group: duplicacy
        shell: /usr/sbin/nologin
        comment: "Duplicacy storage user"
      delegate_to: "{{ duplicacy_storage_host }}"

    - name: Generate key pair to be used by Duplicacy
      community.crypto.openssh_keypair:
        path: "{{ duplicacy_config_directory }}/duplicacy_id_ssh_rsa"

    - name: Generate key pair to be used by Duplicacy
      ansible.builtin.fetch:
        src: "{{ duplicacy_config_directory }}/duplicacy_id_ssh_rsa.pub"
        dest: "/tmp/duplicacy_id_ssh_rsa.pub"

    - name: adding user "{{ ansible_nas_user }}" to Duplicacy group
      ansible.builtin.user:
        name: "{{ ansible_nas_user }}"
        groups: "{{ duplicacy_storage_group }}"
        append: yes
      delegate_to: "{{ duplicacy_storage_host }}"

    - name: Create Duplicacy backup directory
      ansible.builtin.file:
        path: "{{ duplicacy_storage_directory }}"
        state: directory
        group: "{{ duplicacy_storage_group }}"
        owner: "{{ duplicacy_storage_user }}"
      delegate_to: "{{ duplicacy_storage_host }}"

    - name: Template OpenSSH config for internal-sftp user
      ansible.builtin.template:
        src: duplicacy-sftp.conf
        dest: "/etc/ssh/sshd_config.d/duplicacy-sftp.conf"
        mode: 600
      delegate_to: "{{ duplicacy_storage_host }}"

    - name: Remove sftp subsystems from OpenSSH configs
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regex: \s*Subsystem\s*sftp
        state: absent
      delegate_to: "{{ duplicacy_storage_host }}"
  when: duplicacy_storage_enabled is true
