---
- name: Start Gitlab
  block:
    - name: Create Gitlab Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ gitlab_data_directory }}/config"
        - "{{ gitlab_data_directory }}/log"
        - "{{ gitlab_data_directory }}/data"

    - name: Create Gitlab Docker Container
      community.docker.docker_container:
        name: "{{ gitlab_container_name }}"
        image: "{{ gitlab_image_name }}:{{ gitlab_image_version }}"
        pull: true
        volumes:
          - "{{ gitlab_data_directory }}/config:/etc/gitlab:rw"
          - "{{ gitlab_data_directory }}/log:/var/log/gitlab:rw"
          - "{{ gitlab_data_directory }}/data:/var/opt/gitlab:rw"
        network_mode: "bridge"
        ports:
          - "{{ gitlab_port_http }}:80"
          - "{{ gitlab_port_https }}:443"
          - "{{ gitlab_port_ssh }}:22"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ gitlab_user_id }}"
          PGID: "{{ gitlab_group_id }}"
          # DATABASE_URL: "{{ gitlab_database_url }}" # enable if using external DB
          ENABLE_BOOTSNAP: "{{ gitlab_enable_bootsnap }}"
          EXTERNAL_URL: "{{ gitlab_external_url }}"
          EXTERNAL_VALIDATION_SERVICE_TIMEOUT: "{{ gitlab_external_validation_service_timeout }}"
          EXTERNAL_VALIDATION_SERVICE_URL: "{{ gitlab_external_validation_service_url }}"
          EXTERNAL_VALIDATION_SERVICE_TOKEN: "{{ gitlab_external_validation_service_token }}"
          GITLAB_CDN_HOST: "{{ gitlab_cdn_host }}"
          GITLAB_EMAIL_DISPLAY_NAME: "{{ gitlab_email_display_name }}"
          GITLAB_EMAIL_FROM: "{{ gitlab_email_from }}"
          GITLAB_EMAIL_REPLY_TO: "{{ gitlab_email_reply_to }}"
          GITLAB_EMAIL_SUBJECT_SUFFIX: "{{ gitlab_email_subject_suffix }}"
          GITLAB_HOST: "{{ gitlab_host }}"
          GITLAB_MARKUP_TIMEOUT: "{{ gitlab_markup_timeout }}"
          GITLAB_ROOT_PASSWORD: "{{ gitlab_root_password }}"
          GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN: "{{ gitlab_shared_runners_registration_token }}"
          RAILS_ENV: "{{ gitlab_rails_env }}"
          GITLAB_RAILS_CACHE_DEFAULT_TTL_SECONDS: "{{ gitlab_rails_cache_default_ttl_seconds }}"
          GITLAB_CI_CONFIG_FETCH_TIMEOUT_SECONDS: "{{ gitlab_ci_config_fetch_timeout_seconds }}"
          GITLAB_OMNIBUS_CONFIG: "{{ gitlab_omnibus_config | to_nice_yaml }}"
        restart_policy: unless-stopped
        hostname: "{{ gitlab_hostname }}.{{ ansible_nas_domain }}"
        memory: "{{ gitlab_memory }}"
        labels:
          traefik.enable: "{{ gitlab_available_externally | string }}"
          traefik.http.routers.gitlab.rule: "Host(`{{ gitlab_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.gitlab.tls.certresolver: "letsencrypt"
          traefik.http.routers.gitlab.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.gitlab.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.gitlab.loadbalancer.server.port: "80"
  when: gitlab_enabled is true

- name: Stop Gitlab
  block:
    - name: Stop Gitlab
      community.docker.docker_container:
        name: "{{ gitlab_container_name }}"
        state: absent
  when: gitlab_enabled is false
