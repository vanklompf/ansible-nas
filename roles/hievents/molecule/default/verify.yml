---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ../../defaults/main.yml

    - name: Get hievents db container state
      community.docker.docker_container:
        name: "{{ hievents_db_container_name }}"
      register: result_db

    - name: Get hievents redis container state
      community.docker.docker_container:
        name: "{{ hievents_redis_container_name }}"
      register: result_redis

    - name: Get hievents nginx container state
      community.docker.docker_container:
        name: "{{ hievents_nginx_container_name }}"
      register: result_nginx

    - name: Get hievents backend container state
      community.docker.docker_container:
        name: "{{ hievents_backend_container_name }}"
      register: result_backend

    - name: Get hievents frontend container state
      community.docker.docker_container:
        name: "{{ hievents_frontend_container_name }}"
      register: result_frontend

    - name: Check if hievents containers are running
      ansible.builtin.assert:
        that:
          - result_db.container['State']['Status'] == "running"
          - result_db.container['State']['Restarting'] == false
          - result_redis.container['State']['Status'] == "running"
          - result_redis.container['State']['Restarting'] == false
          - result_nginx.container['State']['Status'] == "running"
          - result_nginx.container['State']['Restarting'] == false
          - result_backend.container['State']['Status'] == "running"
          - result_backend.container['State']['Restarting'] == false
          - result_frontend.container['State']['Status'] == "running"
          - result_frontend.container['State']['Restarting'] == false
