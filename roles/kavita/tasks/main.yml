---
- name: Start Kavita
  block:
    - name: Create Kavita Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ kavita_data_directory }}"

    - name: Create Kavita Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ kavita_container_name }}"
        image: "{{ kavita_image_name }}:{{ kavita_image_version }}"
        pull: true
        volumes:
          - "{{ kavita_data_directory }}/config:/config:rw"
          - "{{ kavita_comics_directory }}:/comics:ro"
        ports:
          - "{{ kavita_port }}:5000"
        env:
          TZ: "{{ ansible_nas_timezone }}"
          PUID: "{{ kavita_user_id | quote }}"
          PGID: "{{ kavita_group_id | quote }}"
          JAVA_TOOL_OPTIONS: "{{ kavita_java_options }}"
        restart_policy: unless-stopped
        memory: "{{ kavita_memory }}"
        labels:
          traefik.enable: "{{ kavita_available_externally | string }}"
          traefik.http.routers.kavita.rule: "Host(`{{ kavita_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.kavita.tls.certresolver: "letsencrypt"
          traefik.http.routers.kavita.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.kavita.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.kavita.loadbalancer.server.port: "5000"
  when: kavita_enabled is true

- name: Stop Kavita
  block:
    - name: Stop Kavita
      community.docker.docker_container:
        name: "{{ kavita_container_name }}"
        state: absent
  when: kavita_enabled is false
