---
- name: Start Mainsail
  block:
    - name: Create Mainsail Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ mainsail_data_directory }}"

    - name: Template Mainsail config
      ansible.builtin.template:
        src: config.json.j2
        dest: "{{ mainsail_data_directory }}/config.json"
      register: template_config

    - name: Create Mainsail Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ mainsail_container_name }}"
        image: "{{ mainsail_image_name }}:{{ mainsail_image_version }}"
        pull: true
        volumes:
          - "{{ mainsail_data_directory }}/config.json:/usr/share/nginx/html/config.json"
        ports:
          - "{{ mainsail_port }}:80"
        restart_policy: unless-stopped
        memory: "{{ mainsail_memory }}"
        labels:
          traefik.enable: "{{ mainsail_available_externally | string }}"
          traefik.http.routers.mainsail.rule: "Host(`{{ mainsail_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.mainsail.tls.certresolver: "letsencrypt"
          traefik.http.routers.mainsail.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.mainsail.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.mainsail.loadbalancer.server.port: "80"
  when: mainsail_enabled is true

- name: Stop Mainsail
  block:
    - name: Stop Mainsail
      community.docker.docker_container:
        name: "{{ mainsail_container_name }}"
        state: absent
  when: mainsail_enabled is false
