---
- name: Start Mmp
  block:
    - name: Create Mmp Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ mmp_data_directory }}"

    - name: Create Mmp network
      community.docker.docker_network:
        name: "{{ mmp_network_name }}"

    - name: Create Mmp Agent Docker Container
      community.docker.docker_container:
        name: "{{ mmp_agent_container_name }}"
        image: "{{ mmp_agent_image_name }}:{{ mmp_agent_image_version }}"
        pull: true
        ports:
          - "{{ mmp_agent_port }}:8000"
        volumes:
          - "{{ mmp_data_directory }}/library:/library:rw"
          - "{{ mmp_data_directory }}/data:/data:rw"
        networks:
          - name: "{{ mmp_network_name }}"
        network_mode: "{{ mmp_network_name }}"
        container_default_behavior: no_defaults
        labels:
          traefik.enable: "false"
        restart_policy: always
        memory: "{{ mmp_agent_memory }}"

    - name: Create Mmp UI Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ mmp_ui_container_name }}"
        image: "{{ mmp_ui_image_name }}:{{ mmp_ui_image_version }}"
        pull: true
        networks:
          - name: "{{ mmp_network_name }}"
        network_mode: "{{ mmp_network_name }}"
        ports:
          - "{{ mmp_ui_port }}:8081"
        env:
          AGENT_ADDRESS: "{{ mmp_agent_container_name }}:8000"
        restart_policy: unless-stopped
        memory: "{{ mmp_ui_memory }}"
        labels:
          traefik.enable: "{{ mmp_available_externally | string }}"
          traefik.http.routers.mmp.rule: "Host(`{{ mmp_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.mmp.tls.certresolver: "letsencrypt"
          traefik.http.routers.mmp.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.mmp.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.mmp.loadbalancer.server.port: "8081"
  when: mmp_enabled is true

- name: Stop Mmp
  block:
    - name: Stop Mmp agent
      community.docker.docker_container:
        name: "{{ mmp_agent_container_name }}"
        state: absent

    - name: Stop Mmp UI
      community.docker.docker_container:
        name: "{{ mmp_ui_container_name }}"
        state: absent
  when: mmp_enabled is false
