---
nocodb_enabled: false
nocodb_available_externally: false

# directories
nocodb_data_directory: "{{ docker_home }}/nocodb"

# network
nocodb_port: "8164"
nocodb_hostname: "nocodb"
nocodb_network_name: "nocodb"

# specs
nocodb_memory: 1g
nocodb_postgres_memory: 1g
nocodb_redis_memory: 1g

# docker
nocodb_container_name: "nocodb"
nocodb_image_name: "nocodb/nocodb"
nocodb_image_version: "latest"
nocodb_postgres_container_name: "nocodb-db"
nocodb_postgres_image_name: "docker.io/library/postgres"
nocodb_postgres_image_version: "13"
nocodb_redis_container_name: "nocodb-redis"
nocodb_redis_image_name: "redis"
nocodb_redis_image_version: "6"
nocodb_user_id: "1000"
nocodb_group_id: "1000"

# nocodb
nocodb_db_name: "nocodb"
nocodb_db_user: "nocodb"
nocodb_db_password: "nocodb"
nocodb_nc_db: "pg://{{ nocodb_postgres_container_name }}:5432?u={{ nocodb_db_user }}&p={{ nocodb_db_password }}&d={{ nocodb_db_name }}"
nocodb_nc_db_json: "" # Can be used instead of NC_DB and value should be valid knex connection JSON string.
nocodb_nc_db_json_file: "" # Can be used instead of NC_DB and value should be a valid path to knex connection JSON file.
nocodb_database_url: "" # Can be used instead of NC_DB and value should be a JDBC URL string.
nocodb_database_url_file: "" # Can be used instead of NC_DB and value should be a valid path to a JDBC URL file.
nocodb_nc_auth_jwt: "A_random_secret" # JWT secret used for auth and storing other secrets. A random secret is generated.
nocodb_public_url: "https://{{ nocodb_hostname }}.{{ ansible_nas_domain }}" # is the base URL for constructing URLs in email templates, generating the Swagger documentation URL, and handling backend URL requirements. Set it to your public-facing NocoDB URL for consistency across the application. By default, it infers the URL from the incoming request on the backend. If the server is behind a proxy, this may result in incorrect URLs.
nocodb_admin_email: "admin@{{ ansible_nas_domain }}" # Super admin e-mail address.
nocodb_admin_password: "super_secret" # Super admin password. The password should have at least 8 letters with one uppercase, one number and one special letter. Allowed special characters include $&+,:;=?@#|'.^*()%!_-".
nocodb_port_env: "8080" # Network port NocoDB runs on. Defaults to 8080.
nocodb_db_query_limit_default: "25" # Pagination limit. Defaults to 25.
nocodb_db_query_limit_group_by_group: "10" # Group per page limit. Defaults to 10.
nocodb_db_query_limit_group_by_record: "10" # Record per group limit. Defaults to 10.
nocodb_db_query_limit_max: "1000" # Maximum allowed pagination limit. Defaults to 1000.
nocodb_db_query_limit_min: "1" # Minimum allowed pagination limit. Defaults to 1.
nocodb_tool_dir: "/usr/app/data/" # App directory to keep metadata and app related files in. Defaults to the current working directory. In docker, maps to /usr/app/data/ for mounting volume.
nocodb_jwt_expires_in: "10h" # JWT token expiry time Defaults to 10h.
nocodb_connect_to_external_db_disabled: "false" # Disable base creation on external databases.
nocodb_minimal_dbs: "false" # Create a new SQLite file for each base. All the SQLite database files are stored in the nc_minimal_dbs folder in the current working directory. Enabling this option automatically sets NC_CONNECT_TO_EXTERNAL_DB_DISABLED, i.e. disables base creation on external databases.
nocodb_invite_only_signup: "false" # Removed since version 0.99.0, and now it's recommended to use the super admin settings menu. Disable public signup and allow signup only via invitations.
nocodb_nuxt_public_nc_backend_url: "http://localhost:8080" # Custom backend URL. Defaults to http://localhost:8080.
nocodb_request_body_size: "1048576" # Request body size limit Defaults to 1048576.
nocodb_export_max_timeout: "5000" # After NC_EXPORT_MAX_TIMEOUT (in milliseconds), CSV gets downloaded in batches. Defaults to 5000 (5 seconds).
nocodb_dashboard_url: "/dashboard" # Custom dashboard URL path Defaults to /dashboard.
nocodb_google_client_id: "" # Google client ID to enable Google authentication.
nocodb_google_client_secret: "" # Google client secret to enable Google authentication.
nocodb_migrations_disabled: "" # Disable NocoDB migrations.
nocodb_min: "" # Disable default splash screen (initial welcome animation) and matrix screensaver.
nocodb_sentry_dsn: "" # Data Source Name (DSN) for Sentry monitoring.
nocodb_redis_password: "redis"
nocodb_redis_url: "redis://:{{ nocodb_redis_password }}@{{ nocodb_redis_container_name }}:6379" # Redis URL. Example: redis://:authpassword@127.0.0.1:6380/4 Meta data is stored in memory.
nocodb_disable_cache: "false" # Disable cache. To be used only while debugging. If true, meta data is fetched from database instead of redis/cache. Defaults to false.
nocodb_disable_err_report: "true" # Disable error reporting.
nocodb_disable_tele: "true" # Disable telemetry.
nocodb_disable_email_auth: "false" # Disable authentication via e-mail and password. Authentication via e-mail and password is enabled.
nocodb_disable_audit: "false" # Disable audit log. Defaults to false.
nocodb_smtp_from: "" # E-mail sender address for SMTP plugin. SMTP plugin is disabled if this variable is not set.
nocodb_smtp_host: "" # E-mail server hostname for SMTP plugin. SMTP plugin is disabled if this variable is not set.
nocodb_smtp_port: "" # E-mail server network for SMTP plugin. SMTP plugin is disabled if this variable is not set.
nocodb_smtp_username: "" # Username for authentication in SMTP plugin.
nocodb_smtp_password: "" # Password for authentication in SMTP plugin.
nocodb_smtp_secure: "" # Enable secure authentication in SMTP plugin. Set to true to enable, any other value is treated as false.
nocodb_smtp_ignore_tls: "" # Ignore TLS in SMTP plugin. Set to true to ignore TLS, any other value is treated as false. For more information, visit Nodemailer's SMTP documentation.
nocodb_s3_bucket_name: "" # AWS S3 bucket name for S3 storage plugin.
nocodb_s3_region: "" # AWS S3 region for S3 storage plugin.
nocodb_s3_access_key: "" # AWS access key ID for S3 storage plugin.
nocodb_s3_access_secret: "" # AWS access secret for S3 storage plugin.
nocodb_attachment_field_size: "20971520" # Maximum file size for attachments in bytes. Defaults to 20971520 (20 MiB).
nocodb_max_attachments_allowed: "10" # Maximum number of attachments per cell. Defaults to 10.
nocodb_secure_attachments: "false" # Allow accessing attachments only through pre-signed URLs. Set to true to enable, any other value is treated as false. (⚠ this will make existing links inaccessible ⚠) Defaults to false.
nocodb_attachment_expire_seconds: "7200" # Number of seconds after which pre-signed attachment URLs will begin to expire. The URLs will expire after NC_ATTACHMENT_EXPIRE_SECONDS plus 10 minutes at the very latest. Defaults to 7200 (2 hours).
nocodb_automation_log_level: "OFF" # Possible Values: OFF, ERROR, ALL. See Webhooks for details. Defaults to OFF.
nocodb_allow_local_hooks: "false" # ⚠ Allow webhooks to call local links, which can raise security issues. ⚠ Set to true to enable, any other value is treated as false Defaults to false.
nocodb_sanitize_column_name: "true" # Sanitize the column name during column creation. Set to true to enable, any other value is treated as false Defaults to true.
nocodb_node_options: "" # Node.js options to pass to instance.
nocodb_litestream_s3_endpoint: "" # URL of an S3-compatible object storage service endpoint for Litestream replication of NocoDB's default SQLite database. Example: s3.eu-central-1.amazonaws.com Defaults to AWS S3.
nocodb_litestream_s3_region: "" # AWS region of the Litestream replication object storage bucket. Note that LITESTREAM_S3_ENDPOINT takes precedence if configured (the endpoint URL includes the region). Defaults to the default region configured in AWS.
nocodb_litestream_s3_bucket: "" # Name of the object storage bucket to store the Litestream replication in. Litestream replication is disabled if this variable is not set.
nocodb_litestream_s3_path: "" # Directory path to use within the Litestream replication object storage bucket. Defaults to nocodb.
nocodb_litestream_s3_access_key_id: "" # Authentication key ID for the Litestream replication object storage bucket. Litestream replication is disabled if this variable is not set.
nocodb_litestream_s3_secret_access_key: "" # Authentication secret for the Litestream replication object storage bucket. Litestream replication is disabled if this variable is not set.
nocodb_litestream_s3_skip_verify: "" # Whether to disable TLS verification for the Litestream replication object storage service. This is useful when testing against a local node such as MinIO and you are using self-signed certificates. Defaults to false.
nocodb_litestream_retention: "1440h" # Amount of time Litestream snapshot and WAL files are kept. After the retention period, a new snapshot is created and the old one is removed. WAL files that exist before the oldest snapshot will also be removed. Defaults to 1440h (60 days).
nocodb_litestream_retention_check_interval: "72h" # Frequency in which Litestream will check if retention needs to be enforced. Defaults to 72h (3 days).
nocodb_litestream_snapshot_interval: "24h" # Frequency in which new Litestream snapshots are created. A higher frequency reduces the time to restore since newer snapshots will have fewer WAL frames to apply. Retention still applies to these snapshots. Defaults to 24h (1 day).
nocodb_litestream_sync_interval: "60s" # Frequency in which frames are pushed to the Litestream replica. Increasing this frequency can increase object storage costs significantly. Defaults to 60s (1 minute).
nocodb_litestream_age_public_key: "" # age public key generated by age-keygen (age1...) or SSH public key (ssh-ed25519 AAAA..., ssh-rsa AAAA...) used to encrypt the Litestream replication for. Refer to the relevant Litestream documentation for details. Litestream replication is unencrypted if this variable is not set.
nocodb_litestream_age_secret_key: "" # age secret key (AGE-SECRET-KEY-1...) used to encrypt the Litestream replication with. Refer to the relevant Litestream documentation for details. Litestream replication is unencrypted if this variable is not set.

nocodb_env:
  NC_DB: "{{ nocodb_nc_db }}"
  # NC_DB_JSON: "{{ nocodb_nc_db_json }}" # Can be used instead of NC_DB and value should be valid knex connection JSON string.
  # NC_DB_JSON_FILE: "{{ nocodb_nc_db_json_file }}" # Can be used instead of NC_DB and value should be a valid path to knex connection JSON file.
  # DATABASE_URL: "{{ nocodb_database_url }}" # Can be used instead of NC_DB and value should be a JDBC URL string.
  # DATABASE_URL_FILE: "{{ nocodb_database_url_file }}" # Can be used instead of NC_DB and value should be a valid path to a JDBC URL file.
  NC_AUTH_JWT_SECRET: "{{ nocodb_nc_auth_jwt }}" # JWT secret used for auth and storing other secrets. A random secret is generated.
  NC_PUBLIC_URL: "{{ nocodb_public_url }}" # is the base URL for constructing URLs in email templates, generating the Swagger documentation URL, and handling backend URL requirements. Set it to your public-facing NocoDB URL for consistency across the application. By default, it infers the URL from the incoming request on the backend. If the server is behind a proxy, this may result in incorrect URLs.
  NC_ADMIN_EMAIL: "{{ nocodb_admin_email }}" # Super admin e-mail address.
  NC_ADMIN_PASSWORD: "{{ nocodb_admin_password }}" # Super admin password. The password should have at least 8 letters with one uppercase, one number and one special letter. Allowed special characters include $&+,:;=?@#|'.^*()%!_-".
  PORT: "{{ nocodb_port_env }}" # Network port NocoDB runs on. Defaults to 8080.
  DB_QUERY_LIMIT_DEFAULT: "{{ nocodb_db_query_limit_default }}" # Pagination limit. Defaults to 25.
  DB_QUERY_LIMIT_GROUP_BY_GROUP: "{{ nocodb_db_query_limit_group_by_group }}" # Group per page limit. Defaults to 10.
  DB_QUERY_LIMIT_GROUP_BY_RECORD: "{{ nocodb_db_query_limit_group_by_record }}" # Record per group limit. Defaults to 10.
  DB_QUERY_LIMIT_MAX: "{{ nocodb_db_query_limit_max }}" # Maximum allowed pagination limit. Defaults to 1000.
  DB_QUERY_LIMIT_MIN: "{{ nocodb_db_query_limit_min }}" # Minimum allowed pagination limit. Defaults to 1.
  NC_TOOL_DIR: "{{ nocodb_tool_dir }}" # App directory to keep metadata and app related files in. Defaults to the current working directory. In docker, maps to /usr/app/data/ for mounting volume.
  NC_JWT_EXPIRES_IN: "{{ nocodb_jwt_expires_in }}" # JWT token expiry time Defaults to 10h.
  NC_CONNECT_TO_EXTERNAL_DB_DISABLED: "{{ nocodb_connect_to_external_db_disabled }}" # Disable base creation on external databases.
  NC_MINIMAL_DBS: "{{ nocodb_minimal_dbs }}" # Create a new SQLite file for each base. All the SQLite database files are stored in the nc_minimal_dbs folder in the current working directory. Enabling this option automatically sets NC_CONNECT_TO_EXTERNAL_DB_DISABLED, i.e. disables base creation on external databases.
  NC_INVITE_ONLY_SIGNUP: "{{ nocodb_invite_only_signup }}" # Removed since version 0.99.0, and now it's recommended to use the super admin settings menu. Disable public signup and allow signup only via invitations.
  NUXT_PUBLIC_NC_BACKEND_URL: "{{ nocodb_nuxt_public_nc_backend_url }}" # Custom backend URL. Defaults to http://localhost:8080.
  NC_REQUEST_BODY_SIZE: "{{ nocodb_request_body_size }}" # Request body size limit Defaults to 1048576.
  NC_EXPORT_MAX_TIMEOUT: "{{ nocodb_export_max_timeout }}" # After NC_EXPORT_MAX_TIMEOUT (in milliseconds), CSV gets downloaded in batches. Defaults to 5000 (5 seconds).
  NC_DASHBOARD_URL: "{{ nocodb_dashboard_url }}" # Custom dashboard URL path Defaults to /dashboard.
  # NC_GOOGLE_CLIENT_ID: "{{ nocodb_google_client_id }}" # Google client ID to enable Google authentication.
  # NC_GOOGLE_CLIENT_SECRET: "{{ nocodb_google_client_secret }}" # Google client secret to enable Google authentication.
  NC_MIGRATIONS_DISABLED: "{{ nocodb_migrations_disabled }}" # Disable NocoDB migrations.
  NC_MIN: "{{ nocodb_min }}" # Disable default splash screen (initial welcome animation) and matrix screensaver.
  NC_SENTRY_DSN: "{{ nocodb_sentry_dsn }}" # Data Source Name (DSN) for Sentry monitoring.
  NC_REDIS_URL: "{{ nocodb_redis_url }}" # Redis URL. Example: redis://:authpassword@127.0.0.1:6380/4 Meta data is stored in memory.
  NC_DISABLE_CACHE: "{{ nocodb_disable_cache }}" # Disable cache. To be used only while debugging. If true, meta data is fetched from database instead of redis/cache. Defaults to false.
  NC_DISABLE_ERR_REPORT: "{{  nocodb_disable_err_report }}" # Disable error reporting.
  NC_DISABLE_TELE: "{{ nocodb_disable_tele }}" # Disable telemetry.
  NC_DISABLE_EMAIL_AUTH: "{{ nocodb_disable_email_auth }}" # Disable authentication via e-mail and password. Authentication via e-mail and password is enabled.
  NC_DISABLE_AUDIT: "{{ nocodb_disable_audit }}" # Disable audit log. Defaults to false.
  NC_SMTP_FROM: "{{ nocodb_smtp_from }}" # E-mail sender address for SMTP plugin. SMTP plugin is disabled if this variable is not set.
  NC_SMTP_HOST: "{{ nocodb_smtp_host }}" # E-mail server hostname for SMTP plugin. SMTP plugin is disabled if this variable is not set.
  NC_SMTP_PORT: "{{ nocodb_smtp_port }}" # E-mail server network for SMTP plugin. SMTP plugin is disabled if this variable is not set.
  NC_SMTP_USERNAME: "{{ nocodb_smtp_username }}" # Username for authentication in SMTP plugin.
  NC_SMTP_PASSWORD: "{{ nocodb_smtp_password }}" # Password for authentication in SMTP plugin.
  NC_SMTP_SECURE: "{{ nocodb_smtp_secure }}" # Enable secure authentication in SMTP plugin. Set to true to enable, any other value is treated as false.
  NC_SMTP_IGNORE_TLS: "{{ nocodb_smtp_ignore_tls }}" # Ignore TLS in SMTP plugin. Set to true to ignore TLS, any other value is treated as false. For more information, visit Nodemailer's SMTP documentation.
  NC_S3_BUCKET_NAME: "{{ nocodb_s3_bucket_name }}" # AWS S3 bucket name for S3 storage plugin.
  NC_S3_REGION: "{{ nocodb_s3_region }}" # AWS S3 region for S3 storage plugin.
  NC_S3_ACCESS_KEY: "{{ nocodb_s3_access_key }}" # AWS access key ID for S3 storage plugin.
  NC_S3_ACCESS_SECRET: "{{ nocodb_s3_access_secret }}" # AWS access secret for S3 storage plugin.
  NC_ATTACHMENT_FIELD_SIZE: "{{ nocodb_attachment_field_size }}" # Maximum file size for attachments in bytes. Defaults to 20971520 (20 MiB).
  NC_MAX_ATTACHMENTS_ALLOWED: "{{ nocodb_max_attachments_allowed }}" # Maximum number of attachments per cell. Defaults to 10.
  NC_SECURE_ATTACHMENTS: "{{ nocodb_secure_attachments }}" # Allow accessing attachments only through pre-signed URLs. Set to true to enable, any other value is treated as false. (⚠ this will make existing links inaccessible ⚠) Defaults to false.
  NC_ATTACHMENT_EXPIRE_SECONDS: "{{ nocodb_attachment_expire_seconds }}" # Number of seconds after which pre-signed attachment URLs will begin to expire. The URLs will expire after NC_ATTACHMENT_EXPIRE_SECONDS plus 10 minutes at the very latest. Defaults to 7200 (2 hours).
  NC_AUTOMATION_LOG_LEVEL: "{{ nocodb_automation_log_level }}" # Possible Values: OFF, ERROR, ALL. See Webhooks for details. Defaults to OFF.
  NC_ALLOW_LOCAL_HOOKS: "{{ nocodb_allow_local_hooks }}" # ⚠ Allow webhooks to call local links, which can raise security issues. ⚠ Set to true to enable, any other value is treated as false Defaults to false.
  NC_SANITIZE_COLUMN_NAME: "{{ nocodb_sanitize_column_name }}" # Sanitize the column name during column creation. Set to true to enable, any other value is treated as false Defaults to true.
  NODE_OPTIONS: "{{ nocodb_node_options }}" # Node.js options to pass to instance.
  LITESTREAM_S3_ENDPOINT: "{{ nocodb_litestream_s3_endpoint }}" # URL of an S3-compatible object storage service endpoint for Litestream replication of NocoDB's default SQLite database. Example: s3.eu-central-1.amazonaws.com Defaults to AWS S3.
  LITESTREAM_S3_REGION: "{{ nocodb_litestream_s3_region }}" # AWS region of the Litestream replication object storage bucket. Note that LITESTREAM_S3_ENDPOINT takes precedence if configured (the endpoint URL includes the region). Defaults to the default region configured in AWS.
  LITESTREAM_S3_BUCKET: "{{ nocodb_litestream_s3_bucket }}" # Name of the object storage bucket to store the Litestream replication in. Litestream replication is disabled if this variable is not set.
  LITESTREAM_S3_PATH: "{{ nocodb_litestream_s3_path }}" # Directory path to use within the Litestream replication object storage bucket. Defaults to nocodb.
  LITESTREAM_S3_ACCESS_KEY_ID: "{{ nocodb_litestream_s3_access_key_id }}" # Authentication key ID for the Litestream replication object storage bucket. Litestream replication is disabled if this variable is not set.
  LITESTREAM_S3_SECRET_ACCESS_KEY: "{{ nocodb_litestream_s3_secret_access_key }}" # Authentication secret for the Litestream replication object storage bucket. Litestream replication is disabled if this variable is not set.
  LITESTREAM_S3_SKIP_VERIFY: "{{ nocodb_litestream_s3_skip_verify }}" # Whether to disable TLS verification for the Litestream replication object storage service. This is useful when testing against a local node such as MinIO and you are using self-signed certificates. Defaults to false.
  LITESTREAM_RETENTION: "{{ nocodb_litestream_retention }}" # Amount of time Litestream snapshot and WAL files are kept. After the retention period, a new snapshot is created and the old one is removed. WAL files that exist before the oldest snapshot will also be removed. Defaults to 1440h (60 days).
  LITESTREAM_RETENTION_CHECK_INTERVAL: "{{ nocodb_litestream_retention_check_interval }}" # Frequency in which Litestream will check if retention needs to be enforced. Defaults to 72h (3 days).
  LITESTREAM_SNAPSHOT_INTERVAL: "{{ nocodb_litestream_snapshot_interval }}" # Frequency in which new Litestream snapshots are created. A higher frequency reduces the time to restore since newer snapshots will have fewer WAL frames to apply. Retention still applies to these snapshots. Defaults to 24h (1 day).
  LITESTREAM_SYNC_INTERVAL: "{{ nocodb_litestream_sync_interval }}" # Frequency in which frames are pushed to the Litestream replica. Increasing this frequency can increase object storage costs significantly. Defaults to 60s (1 minute).
  LITESTREAM_AGE_PUBLIC_KEY: "{{ nocodb_litestream_age_public_key }}" # age public key generated by age-keygen (age1...) or SSH public key (ssh-ed25519 AAAA..., ssh-rsa AAAA...) used to encrypt the Litestream replication for. Refer to the relevant Litestream documentation for details. Litestream replication is unencrypted if this variable is not set.
  LITESTREAM_AGE_SECRET_KEY: "{{ nocodb_litestream_age_secret_key }}" # age secret key (AGE-SECRET-KEY-1...) used to encrypt the Litestream replication with. Refer to the relevant Litestream documentation for details. Litestream replication is unencrypted if this variable is not set.
