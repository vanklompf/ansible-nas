---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Include vars
      ansible.builtin.include_vars:
        file: ../../defaults/main.yml

    - name: "Rclone - retrieve information"
      ansible.builtin.stat:
        path: "/usr/local/bin/rclone"
      register: remote_file

    - name: "Rclone - assert that file is created correctly"
      ansible.builtin.assert:
        that:
          - "remote_file.stat.exists"
          - "remote_file.stat.isreg"
          - "remote_file.stat.mode == '0755'"

    - name: "Rclone - check version"
      ansible.builtin.command: "/usr/local/bin/rclone version"
      changed_when: false
      register: shell_result

    - name: Show version
      ansible.builtin.debug:
        var: shell_result.stdout_lines

    - name: Get Rclone service state
      ansible.builtin.systemd:
        name: rclone
        state: started
      register: service_result

    - name: Check that Rclone service is running
      ansible.builtin.assert:
        that:
          - service_result.status['ActiveState'] == "active"
          - service_result.status['Result'] == "success"
          - service_result.state == "started"

    - name: "Cloud upload script - retrieve information"
      ansible.builtin.stat:
        path: "/home/{{ rclone_service_user }}/.config/rclone/cloud_upload.sh"
      register: cloud_upload

    - name: "Cloud upload script - assert that file is created correctly"
      ansible.builtin.assert:
        that:
          - "cloud_upload.stat.exists"
          - "cloud_upload.stat.isreg"
          - "cloud_upload.stat.mode == '0755'"
        success_msg: "Cloud upload script is created!"
        fail_msg: "Cloud upload script is not created!"

    - name: "Excludes file - retrieve information"
      ansible.builtin.stat:
        path: "/home/{{ rclone_service_user }}/.config/rclone/excludes"
      register: excludes

    - name: "Excludes file - assert that file is created correctly"
      ansible.builtin.assert:
        that:
          - "excludes.stat.exists"
          - "excludes.stat.isreg"
          - "excludes.stat.mode == '0644'"
        success_msg: "Excludes file is created!"
        fail_msg: "Excludes file is not created!"

    - name: Check cron job file
      ansible.builtin.fetch:
        src: /var/spool/cron/crontabs/{{ rclone_service_user }}
        dest: /tmp/fetched

    - name: Check if cron job does exist
      ansible.builtin.assert:
        that: "lookup('file', '/tmp/fetched/instance/var/spool/cron/crontabs/{{ rclone_service_user }}') is search('Run cloud_upload script')"
        fail_msg: "Cron job 'Run cloud_upload script' does not exist for user {{ rclone_service_user }}!"
        success_msg: "Cron job 'Run cloud_upload script' exists for user {{ rclone_service_user }}!"
