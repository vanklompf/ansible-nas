---
- name: Start Seafile
  block:
    - name: Create Seafile Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ seafile_data_directory }}"

    - name: Create Seafile Network
      community.docker.docker_network:
        name: "{{ seafile_network_name }}"

    - name: Create Seafile Database Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ seafile_db_container_name }}"
        image: "{{ seafile_db_image_name }}:{{ seafile_db_image_version }}"
        pull: true
        networks:
          - name: "{{ seafile_network_name }}"
        network_mode: "{{ seafile_network_name }}"
        volumes:
          - "{{ seafile_data_directory }}/db:/var/lib/mysql"
        env:
          MYSQL_ROOT_PASSWORD: "{{ seafile_db_root_password }}"
          MYSQL_LOG_CONSOLE: "true"
          MARIADB_AUTO_UPGRADE: "1"
        restart_policy: unless-stopped
        memory: "{{ seafile_db_memory }}"

    - name: Pause for 30 seconds to wait for DB to get up
      ansible.builtin.pause:
        seconds: 30

    - name: Create Seafile Redis Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ seafile_redis_container_name }}"
        image: "{{ seafile_redis_image_name }}:{{ seafile_redis_image_version }}"
        pull: true
        command:
          ['/bin/sh', '-c', 'redis-server --requirepass {{ seafile_redis_password }}']
        networks:
          - name: "{{ seafile_network_name }}"
        network_mode: "{{ seafile_network_name }}"
        restart_policy: unless-stopped
        memory: "{{ seafile_redis_memory }}"

    - name: Create Seafile Docker Container
      community.docker.docker_container:
        container_default_behavior: no_defaults
        name: "{{ seafile_container_name }}"
        image: "{{ seafile_image_name }}:{{ seafile_image_version }}"
        pull: true
        volumes:
          - "{{ seafile_data_directory }}/seafile:/shared:rw"
        ports:
          - "{{ seafile_port }}:80"
        networks:
          - name: "{{ seafile_network_name }}"
        network_mode: "{{ seafile_network_name }}"
        env:
          CACHE_PROVIDER: redis
          REDIS_PASSWORD: "{{ seafile_redis_password }}"
          REDIS_HOST: "{{ seafile_redis_container_name }}"
          REDIS_PORT: "{{ seafile_redis_port }}"
          SEAFILE_MYSQL_DB_HOST: "{{ seafile_db_container_name }}"
          SEAFILE_MYSQL_DB_USER: "{{ seafile_db_user }}"
          SEAFILE_MYSQL_DB_PASSWORD: "{{ seafile_db_password }}"  # Requested, the value shuold be root's password of MySQL service.
          SEAFILE_MYSQL_DB_PORT: "{{ seafile_db_port }}"
          SEAFILE_MYSQL_DB_CCNET_DB_NAME: "ccnet_db"
          SEAFILE_MYSQL_DB_SEAFILE_DB_NAME: "seafile_db"
          SEAFILE_MYSQL_DB_SEAHUB_DB_NAME: "seahub_db"
          INIT_SEAFILE_MYSQL_ROOT_PASSWORD: "{{ seafile_db_root_password }}"
          SEAFILE_ADMIN_EMAIL: "{{ seafile_admin_email }}" # Specifies Seafile admin user, default is 'me@example.com'.
          SEAFILE_ADMIN_PASSWORD: "{{ seafile_admin_password }}"     # Specifies Seafile admin password, default is 'asecret'.
          SEAFILE_SERVER_LETSENCRYPT: "{{ seafile_server_letsencrypt }}"   # Whether to use https or not.
          SEAFILE_SERVER_HOSTNAME: "{{ seafile_hostname }}.{{ ansible_nas_domain }}" # Specifies your host name if https is enabled.
          TIME_ZONE: "{{ ansible_nas_timezone }}"
          JWT_PRIVATE_KEY: "{{ seafile_jwt_key }}"
          SEAFILE_SERVER_PROTOCOL: "https"
        restart_policy: unless-stopped
        memory: "{{ seafile_memory }}"
        labels:
          traefik.enable: "{{ seafile_available_externally | string }}"
          traefik.http.routers.seafile.rule: "Host(`{{ seafile_hostname }}.{{ ansible_nas_domain }}`)"
          traefik.http.routers.seafile.tls.certresolver: "letsencrypt"
          traefik.http.routers.seafile.tls.domains[0].main: "{{ ansible_nas_domain }}"
          traefik.http.routers.seafile.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.services.seafile.loadbalancer.server.port: "80"
          homepage.group: Media
          homepage.name: Seafile
          homepage.icon: seafile
          homepage.href: "https://{{ seafile_hostname }}.{{ ansible_nas_domain }}"
          homepage.description: File sync and share
  when: seafile_enabled is true

- name: Stop Seafile
  block:
    - name: Stop Seafile
      community.docker.docker_container:
        name: "{{ seafile_container_name }}"
        state: absent
    - name: Stop Seafile DB
      community.docker.docker_container:
        name: "{{ seafile_db_container_name }}"
        state: absent
    - name: Stop Seafile Redis
      community.docker.docker_container:
        name: "{{ seafile_redis_container_name }}"
        state: absent
  when: seafile_enabled is false
