---
- name: Start Vaultwarden
  block:
    - name: Create Vaultwarden Directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - "{{ vaultwarden_data_directory }}"

    - name: Vaultwarden Docker Container
      community.docker.docker_container:
        name: "{{ vaultwarden_container_name }}"
        image: "{{ vaultwarden_image_name }}:{{ vaultwarden_image_tag }}"
        pull: true
        ports:
          - "{{ vaultwarden_port_a }}:80"
          - "{{ vaultwarden_port_b }}:3012"
        volumes:
          - "{{ vaultwarden_data_directory }}:/data:rw"
        env:
          SIGNUPS_ALLOWED: "{{ vaultwarden_allow_signups | string }}"
          ADMIN_TOKEN: "{{ vaultwarden_admin_token }}"
          LOG_FILE: "/data/vaultwarden.log"
          WEBSOCKET_ENABLED: "true"
        labels:
          traefik.enable: "{{ vaultwarden_available_externally | string }}"
          traefik.http.routers.vaultwarden.rule: "Host(`{{ vaultwarden_hostname }}.{{ ansible_nas_domain }}`)"
          # traefik.http.routers.vaultwarden.tls.certresolver: "letsencrypt"
          # traefik.http.routers.vaultwarden.tls.domains[0].main: "{{ ansible_nas_domain }}"
          # traefik.http.routers.vaultwarden.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.routers.vaultwarden.service: "vaultwarden"
          traefik.http.routers.vaultwarden.middlewares: "vaultwarden-ipwhitelist@docker"
          traefik.http.services.vaultwarden.loadbalancer.server.port: "80"
          traefik.http.routers.vaultwarden-ws.rule: "Host(`{{ vaultwarden_hostname }}.{{ ansible_nas_domain }}`) && Path(`/notifications/hub`)"
          # traefik.http.routers.vaultwarden-ws.tls.certresolver: "letsencrypt"
          # traefik.http.routers.vaultwarden-ws.tls.domains[0].main: "{{ ansible_nas_domain }}"
          # traefik.http.routers.vaultwarden-ws.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
          traefik.http.routers.vaultwarden-ws.service: "vaultwarden-ws"
          traefik.http.routers.vaultwarden-ws.middlewares: "vaultwarden-ipwhitelist@docker"
          traefik.http.services.vaultwarden-ws.loadbalancer.server.port: "3012"
          traefik.http.middlewares.vaultwarden-ipwhitelist.ipwhitelist.sourcerange: "{{ vaultwarden_ip_whitelist }}"
        restart_policy: unless-stopped
        memory: "{{ vaultwarden_memory }}"

    - name: Vaultwarden Backup Container
      community.docker.docker_container:
        name: "{{ vaultwarden_backup_container_name }}"
        image: "{{ vaultwarden_backup_image_name }}:{{ vaultwarden_backup_image_tag }}"
        pull: true
        restart_policy: unless-stopped
        volumes_from: "{{ vaultwarden_container_name }}"
        memory: "{{ vaultwarden_backup_memory }}"
  when: vaultwarden_enabled is true

- name: Stop Vaultwarden
  block:
    - name: Stop Vaultwarden
      community.docker.docker_container:
        name: "{{ vaultwarden_container_name }}"
        state: absent

    - name: Stop Vaultwarden Backup
      community.docker.docker_container:
        name: "{{ vaultwarden_backup_container_name }}"
        state: absent
  when: vaultwarden_enabled is false
